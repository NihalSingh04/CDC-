#include <iostream>
#include <vector>
using namespace std;

// ===============================
// BUBBLE SORT
// ===============================
// Time Complexity:
//   - Best Case: O(n) (when already sorted, with optimization)
//   - Average Case: O(n^2)
//   - Worst Case: O(n^2)
// Space Complexity: O(1)
// ===============================
void bubbleSort(vector<int> &arr)
{
  int n = arr.size();
  bool swapped;
  for (int i = 0; i < n - 1; i++)
  {
    swapped = false;
    for (int j = 0; j < n - i - 1; j++)
    {
      if (arr[j] > arr[j + 1])
      {
        swap(arr[j], arr[j + 1]);
        swapped = true;
      }
    }
    if (!swapped)
      break; // Optimization: stop if already sorted
  }
}

// ===============================
// SELECTION SORT
// ===============================
// Time Complexity:
//   - Best Case: O(n^2)
//   - Average Case: O(n^2)
//   - Worst Case: O(n^2)
// Space Complexity: O(1)
// ===============================
void selectionSort(vector<int> &arr)
{
  int n = arr.size();
  for (int i = 0; i < n - 1; i++)
  {
    int minIdx = i;
    for (int j = i + 1; j < n; j++)
    {
      if (arr[j] < arr[minIdx])
        minIdx = j;
    }
    swap(arr[i], arr[minIdx]);
  }
}

// ===============================
// INSERTION SORT
// ===============================
// Time Complexity:
//   - Best Case: O(n) (already sorted)
//   - Average Case: O(n^2)
//   - Worst Case: O(n^2)
// Space Complexity: O(1)
// ===============================
void insertionSort(vector<int> &arr)
{
  int n = arr.size();
  for (int i = 1; i < n; i++)
  {
    int key = arr[i];
    int j = i - 1;

    // Move elements greater than key one position ahead
    while (j >= 0 && arr[j] > key)
    {
      arr[j + 1] = arr[j];
      j--;
    }
    arr[j + 1] = key;
  }
}

// ===============================
// UTILITY FUNCTION
// ===============================
void printArray(const vector<int> &arr)
{
  for (int x : arr)
    cout << x << " ";
  cout << endl;
}

// ===============================
// MAIN FUNCTION
// ===============================
int main()
{
  vector<int> arr = {64, 25, 12, 22, 11};

  cout << "Original array: ";
  printArray(arr);

  vector<int> arr1 = arr, arr2 = arr, arr3 = arr;

  cout << "\nBubble Sort: ";
  bubbleSort(arr1);
  printArray(arr1);

  cout << "Selection Sort: ";
  selectionSort(arr2);
  printArray(arr2);

  cout << "Insertion Sort: ";
  insertionSort(arr3);
  printArray(arr3);

  return 0;
}
