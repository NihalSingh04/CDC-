#include <iostream>
#include <vector>
#include <queue>
using namespace std;

// Function to print all elements of a row-wise sorted matrix in sorted order
void printSorted(vector<vector<int>> &matrix)
{
  int n = matrix.size();
  int m = matrix[0].size();

  // Min-heap to store elements
  priority_queue<int, vector<int>, greater<int>> pq;

  for (int i = 0; i < n; i++)
  {
    for (int j = 0; j < m; j++)
    {
      pq.push(matrix[i][j]);
    }
  }

  cout << "Elements in sorted order: ";
  while (!pq.empty())
  {
    cout << pq.top() << " ";
    pq.pop();
  }
  cout << endl;
}

int main()
{
  vector<vector<int>> matrix = {
      {1, 3, 5},
      {2, 4, 6},
      {0, 7, 8}};

  printSorted(matrix);
  return 0;
}

/*
Explanation:
- Push all elements into a min-heap.
- Pop elements from the heap to get sorted order.
- Simple and intuitive approach.

Time Complexity: O(n*m*log(n*m))  (due to heap operations)
Space Complexity: O(n*m)
*/
