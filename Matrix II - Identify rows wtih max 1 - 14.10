#include <iostream>
#include <vector>
using namespace std;

// Function to find row with maximum number of 1s
int rowWithMaxOnes(vector<vector<int>>& matrix) {
    int n = matrix.size();
    int m = matrix[0].size();

    int maxRow = -1;
    int maxOnes = -1;

    for (int i = 0; i < n; i++) {
        int count = 0;
        for (int j = 0; j < m; j++) {
            if (matrix[i][j] == 1)
                count++;
        }

        if (count > maxOnes) {
            maxOnes = count;
            maxRow = i;
        }
    }
    return maxRow;
}

int main() {
    vector<vector<int>> matrix = {
        {0, 1, 1, 1},
        {0, 0, 1, 1},
        {1, 1, 1, 1},
        {0, 0, 0, 0}
    };

    cout << "Row with maximum 1s is: " << rowWithMaxOnes(matrix) << endl;

    return 0;
}

/*
- Traverse each row and count number of 1s.
- Keep track of row with maximum count.

Time Complexity: O(n*m)
Space Complexity: O(1)
*/
